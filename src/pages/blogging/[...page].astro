---
import moment from 'moment';

import site from '../../data/site.js';
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogItem from '../../components/BlogItem.astro';

export async function getStaticPaths({ paginate, rss }) {
  const posts = Astro.fetchContent('./**/*.md');
  const postsSorted = posts.sort((a, b) => b.time - a.time);

  rss({
    title: site.title,
    description: site.description,
    customData: `<language>en-us</language><lastBuildDate>${(new Date()).toISOString()}</lastBuildDate>`,
    items: postsSorted.map(post => {
      // Add image and email reply link to the post content for RSS readers
      const title = `${moment.unix(post.time).format('YYYY-MM-DD, HH:mm')} (${post.tags.map(tag => `#${tag}`).join(', ')})`;
      let rssDescription = post.astro.html;
      if (post.images && post.images.length > 0) {
        rssDescription = `<p><img src="${site.url}/images${post.url}${post.images[0]}"></p>` + rssDescription;
      }
      rssDescription += `<p><a href="mailto:${site.email}?subject=${encodeURIComponent(`Re: ${title}`)}">Reply via email</a></p>`;
      return {
        title,
        description: rssDescription,
        link: `${post.url}/`,
        pubDate: moment.unix(post.time).format(),
        customData: `<guid>${post.url}</guid>`
      }
    }),
    dest: "/feeding.xml",
  });

  return paginate(postsSorted, { pageSize: 10});
}

const { page } = Astro.props;
---

<BaseLayout>
  {page.data.map(post => <BlogItem post={post} path={`${post.url}/`}>{post.astro.html}</BlogItem>)}
</BaseLayout>
